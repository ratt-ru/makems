//#  %TEST%.cc: one line description
//#
//#  Copyright (C) %YEAR%
//#  ASTRON (Netherlands Foundation for Research in Astronomy)
//#  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
//#
//#  This program is free software; you can redistribute it and/or modify
//#  it under the terms of the GNU General Public License as published by
//#  the Free Software Foundation; either version 2 of the License, or
//#  (at your option) any later version.
//#
//#  This program is distributed in the hope that it will be useful,
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//#  GNU General Public License for more details.
//#
//#  You should have received a copy of the GNU General Public License
//#  along with this program; if not, write to the Free Software
//#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//#
//#  $Id: test.cc_template 10490 2007-08-31 09:39:48Z diepen $

using namespace LOFAR;

//# Always #include <lofar_config.h> first!
#include <lofar_config.h>

//# Includes
#include <Common/LofarLogger.h>
#include <%PACKAGE%/%TESTSHORT%.h>

using namespace LOFAR;
using namespace LOFAR::%PACKAGE%;

//
// MAIN (param1, param2)
//
int main (int argc, char* argv[]) {

  // Always bring up the logger first
  string progName = basename(argv[0]);
  INIT_LOGGER (progName.c_str());

  // Check invocation syntax
  if (argc < 3) {
    LOG_FATAL_STR ("Invocation error, run as: " << progName <<
                   " param1 param2");
    return (-1);
  }

  // Tell operator we are trying to start up.
  LOG_INFO_STR("Starting up: " << argv[0] << "(" << argv[1] << ", "
               << argv[2] << ")");
  try {
    ... do work ...
    LOG_INFO_STR("Shutting down: " << argv[0]);
  }
  catch (std::exception& ex) {
    LOG_FATAL_STR("Caught exception: " << ex.what() << endl);
    LOG_FATAL_STR(argv[0] << " terminated by exception!");
    return (1);
  }

  LOG_INFO_STR(argv[0] << " ended normally");
  return (0);

}
