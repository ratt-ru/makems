#!/bin/sh

# This script counts the nr of lines in each directory in a source tree.
# It counts:    total nr of lines
#               nr of pure code lines (code lines containing alphanumeric char)
#               nr of pure comment lines
# It also calculates the percentages of pure lines.
#
# The values are printed on stdout for each directory in the source tree.
# It -s is given as the first argument, sloccount is used on a copy of the
# source tree, where each C++ file contains pure code lines only.
#
# Temporary files are created in a subdirectory of /tmp.

# Run as:    countalllines [sourceroot] [-s]
#
# Default sourceroot is current directory.
# countalllines is used recursively. For the next runs it is used as
#            countalllines -r indent sloc slocdir


# Get directory of the script (where the other scripts are as well).
edir=`dirname $0`
if [ "$edir" = "" -o "$edir" = "." ]; then
  edir=`pwd`
else
  edir=`cd $edir > /dev/null; pwd`
fi

# Set indentation for level.
indent=""
slocdir=""
# Determine if sloccount has to be used.
sloc=0
topone=0
if [ "$1" = "-r" ]; then
  indent="$2"
  sloc="$3"
  slocdir="$4"
else  
  topone=1
  if [ "$1" = "-s" ]; then
    sloc=1
    shift
  fi
  # cd to sourceroot if given.
  if [ "$1" != "" ]; then
    cd $1
  fi
fi
# Set indentation for the next level.
indnew="$indent  "

# Create temporary names for this user in the /tmp directory.
cntdirnm=/tmp/`whoami`_tmp_count
cntlinnm=${cntdirnm}_dir        # name as used by countlines
totfilnm=${cntdirnm}_total
if [ $topone = 1 -a $sloc = 1 ]; then
  slocdir=${cntdirnm}_slocdir
  \rm -rf "$slocdir"
  mkdir "$slocdir"
fi

if [ $topone = 1 ]; then
  echo "Lines: total        code          comment"
fi

# Find all directories.
# Replace blanks in a dirname by something special and remove newlines.
dirs=`ls -F | egrep '/$' | sed -e 's/ /_-blank-_/g'`
dirs=`echo $dirs`
# Get name of this directory.
# Create the directory in slocdir if needed.
dirnm=`pwd`
dirnm=`basename "$dirnm"`
if [ $sloc = 1 ]; then
  slocdir="$slocdir/$dirnm"
  mkdir "$slocdir"
fi
# Initialize the totals
toth_a=0
toth_b=0
toth_c=0
toth_f=0
totc_a=0
totc_b=0
totc_c=0
totc_f=0
# Loop through all directories.
fnddir=0
if [ "$dirs" != "" ]; then
  for NM in $dirs
  do
    NM=`echo $NM | sed -e 's/_-blank-_/ /g'`
    dnm=`basename "$NM"`
    if [ "$dnm" != "CVS" -a "$dnm" != ".svn" -a "$dnm" != "build" -a "$dnm" != "stage" ]; then
      cd "$NM" > /dev/null
      $edir/countalllines -r "$indnew" "$sloc" "$slocdir"
      countlines_total=`cat $totfilnm`
      rm -rf $totfilnm
      fnddir=1
      toth_a=`echo "$toth_a $countlines_total" | awk '{ print $1+$2 }'`
      toth_b=`echo "$toth_b $countlines_total" | awk '{ print $1+$3 }'`
      toth_c=`echo "$toth_c $countlines_total" | awk '{ print $1+$4 }'`
      toth_f=`echo "$toth_f $countlines_total" | awk '{ print $1+$5 }'`
      totc_a=`echo "$totc_a $countlines_total" | awk '{ print $1+$6 }'`
      totc_b=`echo "$totc_b $countlines_total" | awk '{ print $1+$7 }'`
      totc_c=`echo "$totc_c $countlines_total" | awk '{ print $1+$8 }'`
      totc_f=`echo "$totc_f $countlines_total" | awk '{ print $1+$9 }'`
      cd -
    fi
  done
fi

# If there were no subdirectories, no total will be printed.
dirnms="$dirnm"
if [ $fnddir = 1 ]; then
  dirnms="$dirnm-self"
else
  indnew="$indent"
fi
# Count lines in all headers.
allhdr=`ls *.h *.hpp 2> /dev/null`
if [ "$allhdr" != "" ]; then
  clin=`$edir/countlines -t $allhdr`
  nrh_a=`echo $clin | awk '{print $1}'`
  nrh_b=`echo $clin | awk '{print $2}'`
  nrh_c=`echo $clin | awk '{print $4}'`
  nrh_f=`echo $clin | awk '{print $7}'`
  toth_a=`echo "$toth_a $nrh_a" | awk '{ print $1+$2 }'`
  toth_b=`echo "$toth_b $nrh_b" | awk '{ print $1+$2 }'`
  toth_c=`echo "$toth_c $nrh_c" | awk '{ print $1+$2 }'`
  toth_f=`echo "$toth_f $nrh_f" | awk '{ print $1+$2 }'`
  echo -n "$indnew"
  echo "$nrh_a $nrh_b $nrh_c $nrh_f $dirnms" | awk '{ printf "%8d%8d%6.1f%%%8d%6.1f%%   %5d .h %s\n", $1, $2, 100*$2/$1, $3, 100*$3/$1, $4, $5 }'
  if [ $sloc = 1 ]; then
    cp $cntlinnm/*.h "$slocdir"
  fi
fi
# Count lines in all cc sources.
allsrc=`ls *.cc *.tcc *.c *.cpp *.l *.ll *.y *.yy 2> /dev/null`
if [ "$allsrc" != "" ]; then
  clin=`$edir/countlines -t $allsrc`
  nrc_a=`echo $clin | awk '{print $1}'`
  nrc_b=`echo $clin | awk '{print $2}'`
  nrc_c=`echo $clin | awk '{print $4}'`
  nrc_f=`echo $clin | awk '{print $7}'`
  totc_a=`echo "$totc_a $nrc_a" | awk '{ print $1+$2 }'`
  totc_b=`echo "$totc_b $nrc_b" | awk '{ print $1+$2 }'`
  totc_c=`echo "$totc_c $nrc_c" | awk '{ print $1+$2 }'`
  totc_f=`echo "$totc_f $nrc_f" | awk '{ print $1+$2 }'`
  echo -n "$indnew"
  echo "$nrc_a $nrc_b $nrc_c $nrc_f $dirnms" | awk '{ printf "%8d%8d%6.1f%%%8d%6.1f%%   %5d cc %s\n", $1, $2, 100*$2/$1, $3, 100*$3/$1, $4, $5 }'
  if [ $sloc = 1 ]; then
    cp $cntlinnm/*cc "$slocdir"
  fi
fi
# Print the totals if there were subdirectories.
if [ $fnddir = 1 ]; then
  if [ $toth_a != 0 ]; then
    echo -n "$indent"
    echo "$toth_a $toth_b $toth_c $toth_f $dirnm" | awk '{ printf "%8d%8d%6.1f%%%8d%6.1f%%   %5d .h %s\n", $1, $2, 100*$2/$1, $3, 100*$3/$1, $4, $5 }'
  fi
  if [ $totc_a != 0 ]; then
    echo -n "$indent"
    echo "$totc_a $totc_b $totc_c $totc_f $dirnm" | awk '{ printf "%8d%8d%6.1f%%%8d%6.1f%%   %5d cc %s\n", $1, $2, 100*$2/$1, $3, 100*$3/$1, $4, $5 }'
  fi
fi
echo "$toth_a $toth_b $toth_c $toth_f $totc_a $totc_b $totc_c $totc_f" > $totfilnm
if [ $topone = 1 ]; then
  echo "Lines: total        code          comment"
fi

# Do the sloccount and remove temporary files.
if [ $topone = 1 ]; then
  if [ $sloc = 1 ]; then
    sloccount "$slocdir"
  fi
  # \rm -rf $cntdirnm*
fi
