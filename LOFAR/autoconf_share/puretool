#!/bin/sh

# puretool: wrapper to compile with purify tools
#
#  Copyright (C) 2002
#  ASTRON (Netherlands Foundation for Research in Astronomy)
#  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#  $Id: puretool 405 2002-07-05 13:38:42Z diepen $


# Check for enough arguments
#
if test $# -lt 6 ; then
  echo "usage: puretool [0|1]  [0|1]    [0|1] top_builddir puretool_prefix compiler ..."
  echo "                  ^      ^        ^"
  echo " enable         purify quantify purecov"
  exit 1
fi

#
# Determine which tools have been installed
#
have_purify=$1
shift
have_quantify=$1
shift
have_purecov=$1
shift

#
# Determine location of build directory
#
top_builddir=$1
shift

#
# Determine whether running purify, quantify or purecov
#
puretools_prefix=$1
shift

#
# Test whether PURIFY env variable is set
#
if test "${QA+set}" != "set"; then

  #
  # PURIFY not defined so simply strip the path to the purify binary
  # and call the compiler directly
  #
  $*

else

  #
  # Purify found so save the path to purify and call purify
  # with PURE_OPTIONS as arguments
  #
  error=0
  case $QA in
    purify);;
    quantify);;
    purecov);;
    *)
	echo QA should be set to one of:
	if test $have_purify -eq 1; then
	    echo "    purify"
        fi
	if test $have_quantify -eq 1; then
	    echo "    quantify"
        fi
	if test $have_purecov -eq 1; then
	    echo "    purecov"
        fi
	error=1
  esac

  #
  # Define options for purify, quantify and purecov
  #
  if test "${PURE_OPTIONS+set}" != "set"; then

    #
    # Set different options for each purify tool
    #
    case $QA in
	purify)   PURE_OPTIONS="-best-effort -cache-dir=$top_builddir/pure_cache -always-use-cache-dir -chain-length=50" ;;
	quantify) PURE_OPTIONS="-best-effort -cache-dir=$top_builddir/pure_cache -always-use-cache-dir" ;;
	purecov)  PURE_OPTIONS="-cache-dir=$top_builddir/pure_cache -always-use-cache-dir -chain-length=50" ;;
    esac
  fi

  if test $error -eq 0; then
    $puretools_prefix/$QA/$QA $PURE_OPTIONS $*
  else
    false
  fi
fi
